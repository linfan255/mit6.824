Test (2A): initial election ...
[detectHeartBeat term 0 state 1]:peer 0 convert to Candidate after timeout
[detectHeartBeat term 0 state 1]:peer 1 convert to Candidate after timeout
term[0]: peer[1] start election
[detectHeartBeat term 0 state 1]:peer 2 convert to Candidate after timeout
term[0]: peer[2] start election
[onElection term 1 state 2]: 2 send ReuqestVote to 1
[onElection term 1 state 2]: 1 send ReuqestVote to 2
[onElection term 1 state 2]: 1 send ReuqestVote to 0
[onElection term 1 state 2]: 2 send ReuqestVote to 0
term[0]: peer[0] start election
[onElection term 1 state 2]: 0 send ReuqestVote to 2
[onElection term 1 state 2]: 0 send ReuqestVote to 1
[RequestVote term 1 state 2]:peer 2 convert to Candidate after granting vote to 1
[RequestVote term 1 state 2]:peer 0 convert to Candidate after granting vote to 1
[RequestVote term 1 state 2]:peer 1 convert to Candidate after granting vote to 2
[RequestVote term 1 state 2]:peer 0 received requestVote from 2, but not vote.
[RequestVote term 1 state 2]:peer 2 received requestVote from 0, but not vote.
[RequestVote term 1 state 2]:peer 1 received requestVote from 0, but not vote.
term[1]: peer[1] become leader
term[1]: peer[2] become leader
[sendHeartBeat term 1 state 0]: leader(1) send heartbeat to peer(0)
[sendHeartBeat term 1 state 0]: leader(2) send heartbeat to peer(0)
[sendHeartBeat term 1 state 0]: leader(1) send heartbeat to peer(2)
[sendHeartBeat term 1 state 0]: leader(2) send heartbeat to peer(1)
[AppendEntries term 1 state 0]:peer 2 convert to follower, args.term[1]
[AppendEntries term 1 state 1]: peer(2) received heartbeat from leader(1)
[AppendEntries term 1 state 2]:peer 0 convert to follower, args.term[1]
[AppendEntries term 1 state 1]: peer(0) received heartbeat from leader(2)
[AppendEntries term 1 state 0]:peer 1 convert to follower, args.term[1]
[AppendEntries term 1 state 1]: peer(1) received heartbeat from leader(2)
[AppendEntries term 1 state 1]: peer(0) received heartbeat from leader(1)
[detectHeartBeat term 1 state 1]:peer 1 convert to Candidate after timeout
term[1]: peer[1] start election
[detectHeartBeat term 1 state 1]:peer 0 convert to Candidate after timeout
term[1]: peer[0] start election
[onElection term 2 state 2]: 1 send ReuqestVote to 0
[detectHeartBeat term 1 state 1]:peer 2 convert to Candidate after timeout
term[1]: peer[2] start election
[onElection term 2 state 2]: 0 send ReuqestVote to 2
[onElection term 2 state 2]: 2 send ReuqestVote to 1
[RequestVote term 2 state 2]:peer 0 convert to Candidate after granting vote to 1
[RequestVote term 2 state 2]:peer 2 convert to Candidate after granting vote to 0
[RequestVote term 2 state 2]:peer 1 convert to Candidate after granting vote to 2
[onElection term 2 state 2]: 2 send ReuqestVote to 0
[onElection term 2 state 2]: 0 send ReuqestVote to 1
[onElection term 2 state 2]: 1 send ReuqestVote to 2
[RequestVote term 2 state 2]:peer 0 received requestVote from 2, but not vote.
[RequestVote term 2 state 2]:peer 1 received requestVote from 0, but not vote.
[RequestVote term 2 state 2]:peer 2 received requestVote from 1, but not vote.
term[2]: peer[2] become leader
term[2]: peer[1] become leader
[sendHeartBeat term 2 state 0]: leader(1) send heartbeat to peer(2)
[sendHeartBeat term 2 state 0]: leader(2) send heartbeat to peer(1)
[sendHeartBeat term 2 state 0]: leader(2) send heartbeat to peer(0)
term[2]: peer[0] become leader
[sendHeartBeat term 2 state 0]: leader(0) send heartbeat to peer(2)
[AppendEntries term 2 state 0]:peer 1 convert to follower, args.term[2]
[AppendEntries term 2 state 1]: peer(1) received heartbeat from leader(2)
[sendHeartBeat term 2 state 1]: leader(1) send heartbeat to peer(0)
[AppendEntries term 2 state 0]:peer 0 convert to follower, args.term[2]
[AppendEntries term 2 state 1]: peer(0) received heartbeat from leader(2)
[sendHeartBeat term 2 state 1]: leader(0) send heartbeat to peer(1)
[AppendEntries term 2 state 0]:peer 2 convert to follower, args.term[2]
[AppendEntries term 2 state 1]: peer(2) received heartbeat from leader(1)
[AppendEntries term 2 state 1]: peer(0) received heartbeat from leader(1)
[AppendEntries term 2 state 1]: peer(1) received heartbeat from leader(0)
[AppendEntries term 2 state 1]: peer(2) received heartbeat from leader(0)
[detectHeartBeat term 2 state 1]:peer 1 convert to Candidate after timeout
term[2]: peer[1] start election
[detectHeartBeat term 2 state 1]:peer 2 convert to Candidate after timeout
term[2]: peer[2] start election
[onElection term 3 state 2]: 1 send ReuqestVote to 0
[onElection term 3 state 2]: 2 send ReuqestVote to 1
[onElection term 3 state 2]: 2 send ReuqestVote to 0
[onElection term 3 state 2]: 1 send ReuqestVote to 2
[detectHeartBeat term 2 state 1]:peer 0 convert to Candidate after timeout
term[2]: peer[0] start election
[RequestVote term 3 state 2]:peer 1 convert to Candidate after granting vote to 2
[onElection term 3 state 2]: 0 send ReuqestVote to 2
[RequestVote term 3 state 2]:peer 0 convert to Candidate after granting vote to 2
[RequestVote term 3 state 2]:peer 2 convert to Candidate after granting vote to 1
[RequestVote term 3 state 2]:peer 0 received requestVote from 1, but not vote.
[onElection term 3 state 2]: 0 send ReuqestVote to 1
[RequestVote term 3 state 2]:peer 2 received requestVote from 0, but not vote.
[RequestVote term 3 state 2]:peer 1 received requestVote from 0, but not vote.
term[3]: peer[2] become leader
[sendHeartBeat term 3 state 0]: leader(2) send heartbeat to peer(1)
[sendHeartBeat term 3 state 0]: leader(2) send heartbeat to peer(0)
term[3]: peer[1] become leader
[sendHeartBeat term 3 state 0]: leader(1) send heartbeat to peer(2)
[sendHeartBeat term 3 state 0]: leader(1) send heartbeat to peer(0)
[AppendEntries term 3 state 0]:peer 1 convert to follower, args.term[3]
[AppendEntries term 3 state 1]: peer(1) received heartbeat from leader(2)
[AppendEntries term 3 state 2]:peer 0 convert to follower, args.term[3]
[AppendEntries term 3 state 1]: peer(0) received heartbeat from leader(2)
[AppendEntries term 3 state 0]:peer 2 convert to follower, args.term[3]
[AppendEntries term 3 state 1]: peer(2) received heartbeat from leader(1)
[AppendEntries term 3 state 1]: peer(0) received heartbeat from leader(1)
[detectHeartBeat term 3 state 1]:peer 0 convert to Candidate after timeout
term[3]: peer[0] start election
[detectHeartBeat term 3 state 1]:peer 1 convert to Candidate after timeout
term[3]: peer[1] start election
[onElection term 4 state 2]: 1 send ReuqestVote to 2
[detectHeartBeat term 3 state 1]:peer 2 convert to Candidate after timeout
[onElection term 4 state 2]: 0 send ReuqestVote to 1
term[3]: peer[2] start election
[onElection term 4 state 2]: 1 send ReuqestVote to 0
[onElection term 4 state 2]: 2 send ReuqestVote to 1
[RequestVote term 4 state 2]:peer 1 convert to Candidate after granting vote to 2
[RequestVote term 4 state 2]:peer 1 received requestVote from 0, but not vote.
[RequestVote term 4 state 2]:peer 2 convert to Candidate after granting vote to 1
[RequestVote term 4 state 2]:peer 0 convert to Candidate after granting vote to 1
[onElection term 4 state 2]: 2 send ReuqestVote to 0
[onElection term 4 state 2]: 0 send ReuqestVote to 2
[RequestVote term 4 state 2]:peer 0 received requestVote from 2, but not vote.
[RequestVote term 4 state 2]:peer 2 received requestVote from 0, but not vote.
term[4]: peer[1] become leader
[sendHeartBeat term 4 state 0]: leader(1) send heartbeat to peer(2)
term[4]: peer[2] become leader
[sendHeartBeat term 4 state 0]: leader(2) send heartbeat to peer(1)
[sendHeartBeat term 4 state 0]: leader(1) send heartbeat to peer(0)
[sendHeartBeat term 4 state 0]: leader(2) send heartbeat to peer(0)
[AppendEntries term 4 state 0]:peer 2 convert to follower, args.term[4]
[AppendEntries term 4 state 1]: peer(2) received heartbeat from leader(1)
[AppendEntries term 4 state 2]:peer 0 convert to follower, args.term[4]
[AppendEntries term 4 state 1]: peer(0) received heartbeat from leader(1)
[AppendEntries term 4 state 0]:peer 1 convert to follower, args.term[4]
[AppendEntries term 4 state 1]: peer(1) received heartbeat from leader(2)
[AppendEntries term 4 state 1]: peer(0) received heartbeat from leader(2)
[detectHeartBeat term 4 state 1]:peer 2 convert to Candidate after timeout
term[4]: peer[2] start election
[detectHeartBeat term 4 state 1]:peer 0 convert to Candidate after timeout
term[4]: peer[0] start election
[onElection term 5 state 2]: 2 send ReuqestVote to 1
[onElection term 5 state 2]: 0 send ReuqestVote to 2
[onElection term 5 state 2]: 0 send ReuqestVote to 1
[detectHeartBeat term 4 state 1]:peer 1 convert to Candidate after timeout
term[4]: peer[1] start election
[onElection term 5 state 2]: 1 send ReuqestVote to 2
[RequestVote term 5 state 2]:peer 2 convert to Candidate after granting vote to 0
[RequestVote term 5 state 2]:peer 1 convert to Candidate after granting vote to 0
[RequestVote term 5 state 2]:peer 1 received requestVote from 2, but not vote.
[onElection term 5 state 2]: 2 send ReuqestVote to 0
[onElection term 5 state 2]: 1 send ReuqestVote to 0
[RequestVote term 5 state 2]:peer 2 received requestVote from 1, but not vote.
[RequestVote term 5 state 2]:peer 0 convert to Candidate after granting vote to 2
[RequestVote term 5 state 2]:peer 0 received requestVote from 1, but not vote.
term[5]: peer[2] become leader
term[5]: peer[0] become leader
[sendHeartBeat term 5 state 0]: leader(2) send heartbeat to peer(1)
[sendHeartBeat term 5 state 0]: leader(2) send heartbeat to peer(0)
[sendHeartBeat term 5 state 0]: leader(0) send heartbeat to peer(1)
[AppendEntries term 5 state 0]:peer 0 convert to follower, args.term[5]
[AppendEntries term 5 state 1]: peer(0) received heartbeat from leader(2)
[sendHeartBeat term 5 state 0]: leader(0) send heartbeat to peer(2)
[AppendEntries term 5 state 2]:peer 1 convert to follower, args.term[5]
[AppendEntries term 5 state 1]: peer(1) received heartbeat from leader(0)
[AppendEntries term 5 state 1]: peer(1) received heartbeat from leader(2)
[AppendEntries term 5 state 0]:peer 2 convert to follower, args.term[5]
[AppendEntries term 5 state 1]: peer(2) received heartbeat from leader(0)
[detectHeartBeat term 5 state 1]:peer 0 convert to Candidate after timeout
term[5]: peer[0] start election
[detectHeartBeat term 5 state 1]:peer 2 convert to Candidate after timeout
term[5]: peer[2] start election
[onElection term 6 state 2]: 0 send ReuqestVote to 1
[onElection term 6 state 2]: 2 send ReuqestVote to 1
[onElection term 6 state 2]: 0 send ReuqestVote to 2
[onElection term 6 state 2]: 2 send ReuqestVote to 0
[RequestVote term 5 state 1]:peer 1 convert to follower, args.term[6]
[RequestVote term 5 state 1]:peer 1 received requestVote from 0, but not vote.
[RequestVote term 6 state 2]:peer 2 convert to Candidate after granting vote to 0
[RequestVote term 6 state 1]:peer 1 received requestVote from 2, but not vote.
[RequestVote term 6 state 2]:peer 0 convert to Candidate after granting vote to 2
[detectHeartBeat term 6 state 1]:peer 1 convert to Candidate after timeout
term[6]: peer[1] start election
[onElection term 7 state 2]: 1 send ReuqestVote to 2
[onElection term 7 state 2]: 1 send ReuqestVote to 0
[RequestVote term 6 state 2]:peer 0 convert to follower, args.term[7]
[RequestVote term 6 state 2]:peer 2 convert to follower, args.term[7]
[RequestVote term 6 state 1]:peer 2 received requestVote from 1, but not vote.
[RequestVote term 6 state 1]:peer 0 received requestVote from 1, but not vote.
[detectHeartBeat term 7 state 1]:peer 0 convert to Candidate after timeout
term[7]: peer[0] start election
[onElection term 8 state 2]: 0 send ReuqestVote to 2
[onElection term 8 state 2]: 0 send ReuqestVote to 1
[detectHeartBeat term 7 state 1]:peer 2 convert to Candidate after timeout
term[7]: peer[2] start election
[onElection term 8 state 2]: 2 send ReuqestVote to 1
[RequestVote term 8 state 2]:peer 2 convert to Candidate after granting vote to 0
[RequestVote term 7 state 2]:peer 1 convert to follower, args.term[8]
[RequestVote term 7 state 1]:peer 1 convert to Candidate after granting vote to 0
[RequestVote term 8 state 2]:peer 1 received requestVote from 2, but not vote.
[onElection term 8 state 2]: 2 send ReuqestVote to 0
[RequestVote term 8 state 2]:peer 0 convert to Candidate after granting vote to 2
term[8]: peer[2] become leader
[sendHeartBeat term 8 state 0]: leader(2) send heartbeat to peer(1)
term[8]: peer[0] become leader
[sendHeartBeat term 8 state 0]: leader(0) send heartbeat to peer(2)
[sendHeartBeat term 8 state 0]: leader(0) send heartbeat to peer(1)
[sendHeartBeat term 8 state 0]: leader(2) send heartbeat to peer(0)
[AppendEntries term 8 state 2]:peer 1 convert to follower, args.term[8]
[AppendEntries term 8 state 1]: peer(1) received heartbeat from leader(2)
[AppendEntries term 8 state 0]:peer 2 convert to follower, args.term[8]
[AppendEntries term 8 state 1]: peer(2) received heartbeat from leader(0)
[AppendEntries term 8 state 1]: peer(1) received heartbeat from leader(0)
[AppendEntries term 8 state 0]:peer 0 convert to follower, args.term[8]
[AppendEntries term 8 state 1]: peer(0) received heartbeat from leader(2)
[detectHeartBeat term 8 state 1]:peer 0 convert to Candidate after timeout
term[8]: peer[0] start election
[detectHeartBeat term 8 state 1]:peer 2 convert to Candidate after timeout
term[8]: peer[2] start election
[onElection term 9 state 2]: 0 send ReuqestVote to 2
[onElection term 9 state 2]: 2 send ReuqestVote to 1
[onElection term 9 state 2]: 2 send ReuqestVote to 0
[detectHeartBeat term 8 state 1]:peer 1 convert to Candidate after timeout
term[8]: peer[1] start election
[onElection term 9 state 2]: 1 send ReuqestVote to 2
[RequestVote term 9 state 2]:peer 2 convert to Candidate after granting vote to 0
[RequestVote term 9 state 2]:peer 2 received requestVote from 1, but not vote.
[onElection term 9 state 2]: 0 send ReuqestVote to 1
[RequestVote term 9 state 2]:peer 0 convert to Candidate after granting vote to 2
[RequestVote term 9 state 2]:peer 1 convert to Candidate after granting vote to 2
[RequestVote term 9 state 2]:peer 1 received requestVote from 0, but not vote.
[onElection term 9 state 2]: 1 send ReuqestVote to 0
[RequestVote term 9 state 2]:peer 0 received requestVote from 1, but not vote.
term[9]: peer[2] become leader
[sendHeartBeat term 9 state 0]: leader(2) send heartbeat to peer(1)
[sendHeartBeat term 9 state 0]: leader(2) send heartbeat to peer(0)
term[9]: peer[0] become leader
[sendHeartBeat term 9 state 0]: leader(0) send heartbeat to peer(2)
[AppendEntries term 9 state 0]:peer 0 convert to follower, args.term[9]
[AppendEntries term 9 state 1]: peer(0) received heartbeat from leader(2)
[AppendEntries term 9 state 2]:peer 1 convert to follower, args.term[9]
[AppendEntries term 9 state 1]: peer(1) received heartbeat from leader(2)
[sendHeartBeat term 9 state 0]: leader(0) send heartbeat to peer(1)
[AppendEntries term 9 state 0]:peer 2 convert to follower, args.term[9]
[AppendEntries term 9 state 1]: peer(2) received heartbeat from leader(0)
[AppendEntries term 9 state 1]: peer(1) received heartbeat from leader(0)
--- FAIL: TestInitialElection2A (5.27s)
	config.go:326: expected one leader, got none
FAIL
exit status 1
FAIL	raft	5.268s
